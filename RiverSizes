def riverSizes(matrix):
    visited = [[False for j in range(len(matrix[0]))] for i in range(len(matrix))]
	values = []
	for i in range(len(matrix)):
		for j in range(len(matrix[0])):
			if matrix[i][j] == 1 and visited[i][j] == False:
				count = []
				print("-------------")
				traversal(visited, i, j, count, matrix)
				values.append(sum(count))
    return values

def traversal(visited, i, j, count, matrix):
	print(str(i) + ":" + str(j) + ", " + str(count))
	if visited[i][j] == True:
		return
	if matrix[i][j] == 0:
		visited[i][j] = True
		return
	if visited[i][j] == False and matrix[i][j] == 1:
		count.append(1)
		visited[i][j] = True
	if j + 1 < len(matrix[0]):
		print("right")
		traversal(visited, i, j + 1, count, matrix)
	if i + 1 < len(matrix):
		print("down")
		traversal(visited, i + 1, j, count, matrix)
	if i - 1 >= 0:
		traversal(visited, i - 1, j, count, matrix)
	if j - 1 >= 0:
		traversal(visited, i, j - 1, count, matrix)
	return count
	
#iterate through nodes
#use DFS on node's you do find(recursion) adding onto size as you go down
#keep track of visited nodes
