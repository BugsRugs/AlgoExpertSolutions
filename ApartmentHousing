import java.util.*;
class Program {
  public static int apartmentHunting(List<Map<String, Boolean>> blocks, String[] reqs) {
    ArrayList<Integer> list = new ArrayList<Integer>();
		int sum = 0, temp = 0;
		for(int i = 0; i < blocks.size(); i++){
			for(int j = 0; j < reqs.length; j++){
				if(blocks.get(i).get(reqs[j]) != true){
					temp = search(blocks, reqs[j], i);
					if(temp >= sum){
						sum = temp;
					}
				}
			}
			list.add(sum);
			sum = 0;
		}
		System.out.println(list);
		return list.indexOf(Collections.min(list));
  }
		public static int search(List<Map<String, Boolean>> blocks, String target, int k){
			int sum1 = 100, sum2 = 100;
			if(k + 1 < blocks.size()){
				for(int i = k + 1; i < blocks.size(); i++){
					if(blocks.get(i).get(target) == true){
						sum1 = i - k;
						break;
					} 
				}
			}if(k - 1 >= 0){
				for(int y = k - 1; y >= 0; y--){
					if(blocks.get(y).get(target) == true){
						sum2 = k - y;
						break;
					} 
				}
			}
			return Math.min(sum1, sum2);
			}
		}
